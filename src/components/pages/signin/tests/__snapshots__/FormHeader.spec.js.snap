// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | signin | FormHeader snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormHeader />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="text-left fs32"
        >
          <span
            className="is-bold is-italic is-block"
          >
            Bonjour !
          </span>
        </h1>,
        <p
          className="text-left is-italic is-medium fs22"
        >
          <span
            className="is-block"
          >
            Identifiez-vous
          </span>
          <span
            className="is-block"
          >
            pour accéder aux offres.
          </span>
        </p>,
        <p
          className="fs13 mt18"
        >
          <span>
            * Champs obligatoires
          </span>
        </p>,
      ],
      "className": "mb36",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="is-bold is-italic is-block"
          >
            Bonjour !
          </span>,
          "className": "text-left fs32",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Bonjour !",
            "className": "is-bold is-italic is-block",
          },
          "ref": null,
          "rendered": "Bonjour !",
          "type": "span",
        },
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="is-block"
            >
              Identifiez-vous
            </span>,
            <span
              className="is-block"
            >
              pour accéder aux offres.
            </span>,
          ],
          "className": "text-left is-italic is-medium fs22",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Identifiez-vous",
              "className": "is-block",
            },
            "ref": null,
            "rendered": "Identifiez-vous",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "pour accéder aux offres.",
              "className": "is-block",
            },
            "ref": null,
            "rendered": "pour accéder aux offres.",
            "type": "span",
          },
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            * Champs obligatoires
          </span>,
          "className": "fs13 mt18",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "* Champs obligatoires",
          },
          "ref": null,
          "rendered": "* Champs obligatoires",
          "type": "span",
        },
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="text-left fs32"
          >
            <span
              className="is-bold is-italic is-block"
            >
              Bonjour !
            </span>
          </h1>,
          <p
            className="text-left is-italic is-medium fs22"
          >
            <span
              className="is-block"
            >
              Identifiez-vous
            </span>
            <span
              className="is-block"
            >
              pour accéder aux offres.
            </span>
          </p>,
          <p
            className="fs13 mt18"
          >
            <span>
              * Champs obligatoires
            </span>
          </p>,
        ],
        "className": "mb36",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="is-bold is-italic is-block"
            >
              Bonjour !
            </span>,
            "className": "text-left fs32",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Bonjour !",
              "className": "is-bold is-italic is-block",
            },
            "ref": null,
            "rendered": "Bonjour !",
            "type": "span",
          },
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="is-block"
              >
                Identifiez-vous
              </span>,
              <span
                className="is-block"
              >
                pour accéder aux offres.
              </span>,
            ],
            "className": "text-left is-italic is-medium fs22",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Identifiez-vous",
                "className": "is-block",
              },
              "ref": null,
              "rendered": "Identifiez-vous",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "pour accéder aux offres.",
                "className": "is-block",
              },
              "ref": null,
              "rendered": "pour accéder aux offres.",
              "type": "span",
            },
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              * Champs obligatoires
            </span>,
            "className": "fs13 mt18",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "* Champs obligatoires",
            },
            "ref": null,
            "rendered": "* Champs obligatoires",
            "type": "span",
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
