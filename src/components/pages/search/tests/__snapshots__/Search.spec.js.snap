// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Search snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    dispatch={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/recommendations?categories=Jouer&keywords=Fake",
                "handleSuccess": [Function],
                "method": "GET",
                "stateKey": "searchRecommendations",
              },
              "type": "REQUEST_DATA_GET_SEARCHRECOMMENDATIONS",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "searchRecommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {
                "apiPath": "/types",
                "method": "GET",
              },
              "type": "REQUEST_DATA_GET_/TYPES",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={
      Object {
        "hash": "",
        "key": "lxn6vp",
        "pathname": "/recherche",
        "search": "?orderBy=offer.id+desc",
        "state": undefined,
      }
    }
    match={
      Object {
        "params": Object {
          "option": undefined,
          "subOption": undefined,
          "view": undefined,
        },
      }
    }
    query={
      Object {
        "change": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "parse": [Function],
      }
    }
    recommendations={Array []}
    search={Object {}}
    typeSublabels={Array []}
    typeSublabelsAndDescription={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header
          title="Recherche"
        />,
        false,
        <button
          className="pc-text-button is-absolute fs16"
          id="search-close-button"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden={true}
            className="icon-legacy-close is-white-text"
            title="Retourner sur la page dÃ©couverte"
          />
        </button>,
        <Switch
          location={
            Object {
              "hash": "",
              "key": "lxn6vp",
              "pathname": "/recherche",
              "search": "?orderBy=offer.id+desc",
              "state": undefined,
            }
          }
        >
          <Route
            path="/recherche/resultats/:option?/item/:offerId([A-Z0-9]+)/:mediationId([A-Z0-9]+)?"
            render={[Function]}
          />
          <Route
            path="/recherche/(resultats)?/:option?/:subOption(menu)?"
            render={[Function]}
          />
        </Switch>,
      ],
      "className": "search-page page with-footer with-header",
      "role": "main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "title": "Recherche",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="icon-legacy-close is-white-text"
            title="Retourner sur la page dÃ©couverte"
          />,
          "className": "pc-text-button is-absolute fs16",
          "id": "search-close-button",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "className": "icon-legacy-close is-white-text",
            "title": "Retourner sur la page dÃ©couverte",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              path="/recherche/resultats/:option?/item/:offerId([A-Z0-9]+)/:mediationId([A-Z0-9]+)?"
              render={[Function]}
            />,
            <Route
              path="/recherche/(resultats)?/:option?/:subOption(menu)?"
              render={[Function]}
            />,
          ],
          "location": Object {
            "hash": "",
            "key": "lxn6vp",
            "pathname": "/recherche",
            "search": "?orderBy=offer.id+desc",
            "state": undefined,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/recherche/resultats/:option?/item/:offerId([A-Z0-9]+)/:mediationId([A-Z0-9]+)?",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/recherche/(resultats)?/:option?/:subOption(menu)?",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "main",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            title="Recherche"
          />,
          false,
          <button
            className="pc-text-button is-absolute fs16"
            id="search-close-button"
            onClick={[Function]}
            type="button"
          >
            <span
              aria-hidden={true}
              className="icon-legacy-close is-white-text"
              title="Retourner sur la page dÃ©couverte"
            />
          </button>,
          <Switch
            location={
              Object {
                "hash": "",
                "key": "lxn6vp",
                "pathname": "/recherche",
                "search": "?orderBy=offer.id+desc",
                "state": undefined,
              }
            }
          >
            <Route
              path="/recherche/resultats/:option?/item/:offerId([A-Z0-9]+)/:mediationId([A-Z0-9]+)?"
              render={[Function]}
            />
            <Route
              path="/recherche/(resultats)?/:option?/:subOption(menu)?"
              render={[Function]}
            />
          </Switch>,
        ],
        "className": "search-page page with-footer with-header",
        "role": "main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "title": "Recherche",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="icon-legacy-close is-white-text"
              title="Retourner sur la page dÃ©couverte"
            />,
            "className": "pc-text-button is-absolute fs16",
            "id": "search-close-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "className": "icon-legacy-close is-white-text",
              "title": "Retourner sur la page dÃ©couverte",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                path="/recherche/resultats/:option?/item/:offerId([A-Z0-9]+)/:mediationId([A-Z0-9]+)?"
                render={[Function]}
              />,
              <Route
                path="/recherche/(resultats)?/:option?/:subOption(menu)?"
                render={[Function]}
              />,
            ],
            "location": Object {
              "hash": "",
              "key": "lxn6vp",
              "pathname": "/recherche",
              "search": "?orderBy=offer.id+desc",
              "state": undefined,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/recherche/resultats/:option?/item/:offerId([A-Z0-9]+)/:mediationId([A-Z0-9]+)?",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/recherche/(resultats)?/:option?/:subOption(menu)?",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "main",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
