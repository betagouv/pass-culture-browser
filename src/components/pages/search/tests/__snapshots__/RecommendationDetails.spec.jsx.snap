// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | search | RecommendationDetails should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecommendationDetails
    dispatch={[MockFunction]}
    match={
      Object {
        "params": Object {
          "category": "Applaudir",
          "mediationId": "DU",
          "offerId": "EA",
        },
      }
    }
    recommendation={
      Object {
        "id": "EA",
      }
    }
    requestGetRecommendation={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        false,
        <React.Fragment>
          <Verso
            areDetailsVisible={false}
            booking={null}
            extraClassName="with-header"
            recommendation={
              Object {
                "id": "EA",
              }
            }
          />
        </React.Fragment>,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Verso
              areDetailsVisible={false}
              booking={null}
              extraClassName="with-header"
              recommendation={
                Object {
                  "id": "EA",
                }
              }
            />,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "areDetailsVisible": false,
              "booking": null,
              "extraClassName": "with-header",
              "recommendation": Object {
                "id": "EA",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": Symbol(react.fragment),
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          false,
          <React.Fragment>
            <Verso
              areDetailsVisible={false}
              booking={null}
              extraClassName="with-header"
              recommendation={
                Object {
                  "id": "EA",
                }
              }
            />
          </React.Fragment>,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Verso
                areDetailsVisible={false}
                booking={null}
                extraClassName="with-header"
                recommendation={
                  Object {
                    "id": "EA",
                  }
                }
              />,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "areDetailsVisible": false,
                "booking": null,
                "extraClassName": "with-header",
                "recommendation": Object {
                  "id": "EA",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": Symbol(react.fragment),
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
