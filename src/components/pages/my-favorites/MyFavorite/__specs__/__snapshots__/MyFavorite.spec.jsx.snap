// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | my-favorites | MyFavorite | MyFavorite should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MyFavorite
    date="permanent"
    detailsUrl="fake/url"
    handleToggleFavorite={[MockFunction]}
    humanizeRelativeDistance="10 km"
    isEditMode={false}
    name="Fake offer name"
    offerId="MEFA"
    offerTypeLabel="Fake offer type label"
    status={
      Array [
        Object {
          "class": "booked",
          "label": "Réservé",
        },
      ]
    }
    thumbUrl={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Link
        className="teaser-link"
        replace={false}
        to="fake/url"
      >
        <React.Fragment>
          <div
            className="teaser-thumb"
          >
            <img
              alt=""
              src="http://localhost/icons/picto-placeholder-visueloffre.png"
            />
          </div>
          <div
            className="teaser-wrapper mf-wrapper"
          >
            <div
              className="teaser-title"
            >
              Fake offer name
            </div>
            <div
              className="teaser-sub-title"
            >
              Fake offer type label
            </div>
            <div
              className="teaser-date"
            >
              permanent
            </div>
            <div
              className="mf-infos"
            >
              <span
                className="mf-status mf-booked"
              >
                Réservé
              </span>
              <span
                className="teaser-distance"
              >
                10 km
              </span>
            </div>
          </div>
          <div
            className="teaser-arrow"
          >
            <Icon
              alt={null}
              className="teaser-arrow-img"
              src={null}
              svg="ico-next-S"
            />
          </div>
        </React.Fragment>
      </Link>,
      "className": "mf-my-favorite",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <React.Fragment>
          <div
            className="teaser-thumb"
          >
            <img
              alt=""
              src="http://localhost/icons/picto-placeholder-visueloffre.png"
            />
          </div>
          <div
            className="teaser-wrapper mf-wrapper"
          >
            <div
              className="teaser-title"
            >
              Fake offer name
            </div>
            <div
              className="teaser-sub-title"
            >
              Fake offer type label
            </div>
            <div
              className="teaser-date"
            >
              permanent
            </div>
            <div
              className="mf-infos"
            >
              <span
                className="mf-status mf-booked"
              >
                Réservé
              </span>
              <span
                className="teaser-distance"
              >
                10 km
              </span>
            </div>
          </div>
          <div
            className="teaser-arrow"
          >
            <Icon
              alt={null}
              className="teaser-arrow-img"
              src={null}
              svg="ico-next-S"
            />
          </div>
        </React.Fragment>,
        "className": "teaser-link",
        "replace": false,
        "to": "fake/url",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div
              className="teaser-thumb"
            >
              <img
                alt=""
                src="http://localhost/icons/picto-placeholder-visueloffre.png"
              />
            </div>,
            <div
              className="teaser-wrapper mf-wrapper"
            >
              <div
                className="teaser-title"
              >
                Fake offer name
              </div>
              <div
                className="teaser-sub-title"
              >
                Fake offer type label
              </div>
              <div
                className="teaser-date"
              >
                permanent
              </div>
              <div
                className="mf-infos"
              >
                <span
                  className="mf-status mf-booked"
                >
                  Réservé
                </span>
                <span
                  className="teaser-distance"
                >
                  10 km
                </span>
              </div>
            </div>,
            <div
              className="teaser-arrow"
            >
              <Icon
                alt={null}
                className="teaser-arrow-img"
                src={null}
                svg="ico-next-S"
              />
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt=""
                src="http://localhost/icons/picto-placeholder-visueloffre.png"
              />,
              "className": "teaser-thumb",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "src": "http://localhost/icons/picto-placeholder-visueloffre.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="teaser-title"
                >
                  Fake offer name
                </div>,
                <div
                  className="teaser-sub-title"
                >
                  Fake offer type label
                </div>,
                <div
                  className="teaser-date"
                >
                  permanent
                </div>,
                <div
                  className="mf-infos"
                >
                  <span
                    className="mf-status mf-booked"
                  >
                    Réservé
                  </span>
                  <span
                    className="teaser-distance"
                  >
                    10 km
                  </span>
                </div>,
              ],
              "className": "teaser-wrapper mf-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Fake offer name",
                  "className": "teaser-title",
                },
                "ref": null,
                "rendered": "Fake offer name",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Fake offer type label",
                  "className": "teaser-sub-title",
                },
                "ref": null,
                "rendered": "Fake offer type label",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "permanent",
                  "className": "teaser-date",
                },
                "ref": null,
                "rendered": "permanent",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    Array [
                      <span
                        className="mf-status mf-booked"
                      >
                        Réservé
                      </span>,
                    ],
                    <span
                      className="teaser-distance"
                    >
                      10 km
                    </span>,
                  ],
                  "className": "mf-infos",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "booked",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Réservé",
                      "className": "mf-status mf-booked",
                    },
                    "ref": null,
                    "rendered": "Réservé",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "10 km",
                      "className": "teaser-distance",
                    },
                    "ref": null,
                    "rendered": "10 km",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Icon
                alt={null}
                className="teaser-arrow-img"
                src={null}
                svg="ico-next-S"
              />,
              "className": "teaser-arrow",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "alt": null,
                "className": "teaser-arrow-img",
                "src": null,
                "svg": "ico-next-S",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": [Function],
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          className="teaser-link"
          replace={false}
          to="fake/url"
        >
          <React.Fragment>
            <div
              className="teaser-thumb"
            >
              <img
                alt=""
                src="http://localhost/icons/picto-placeholder-visueloffre.png"
              />
            </div>
            <div
              className="teaser-wrapper mf-wrapper"
            >
              <div
                className="teaser-title"
              >
                Fake offer name
              </div>
              <div
                className="teaser-sub-title"
              >
                Fake offer type label
              </div>
              <div
                className="teaser-date"
              >
                permanent
              </div>
              <div
                className="mf-infos"
              >
                <span
                  className="mf-status mf-booked"
                >
                  Réservé
                </span>
                <span
                  className="teaser-distance"
                >
                  10 km
                </span>
              </div>
            </div>
            <div
              className="teaser-arrow"
            >
              <Icon
                alt={null}
                className="teaser-arrow-img"
                src={null}
                svg="ico-next-S"
              />
            </div>
          </React.Fragment>
        </Link>,
        "className": "mf-my-favorite",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <React.Fragment>
            <div
              className="teaser-thumb"
            >
              <img
                alt=""
                src="http://localhost/icons/picto-placeholder-visueloffre.png"
              />
            </div>
            <div
              className="teaser-wrapper mf-wrapper"
            >
              <div
                className="teaser-title"
              >
                Fake offer name
              </div>
              <div
                className="teaser-sub-title"
              >
                Fake offer type label
              </div>
              <div
                className="teaser-date"
              >
                permanent
              </div>
              <div
                className="mf-infos"
              >
                <span
                  className="mf-status mf-booked"
                >
                  Réservé
                </span>
                <span
                  className="teaser-distance"
                >
                  10 km
                </span>
              </div>
            </div>
            <div
              className="teaser-arrow"
            >
              <Icon
                alt={null}
                className="teaser-arrow-img"
                src={null}
                svg="ico-next-S"
              />
            </div>
          </React.Fragment>,
          "className": "teaser-link",
          "replace": false,
          "to": "fake/url",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <div
                className="teaser-thumb"
              >
                <img
                  alt=""
                  src="http://localhost/icons/picto-placeholder-visueloffre.png"
                />
              </div>,
              <div
                className="teaser-wrapper mf-wrapper"
              >
                <div
                  className="teaser-title"
                >
                  Fake offer name
                </div>
                <div
                  className="teaser-sub-title"
                >
                  Fake offer type label
                </div>
                <div
                  className="teaser-date"
                >
                  permanent
                </div>
                <div
                  className="mf-infos"
                >
                  <span
                    className="mf-status mf-booked"
                  >
                    Réservé
                  </span>
                  <span
                    className="teaser-distance"
                  >
                    10 km
                  </span>
                </div>
              </div>,
              <div
                className="teaser-arrow"
              >
                <Icon
                  alt={null}
                  className="teaser-arrow-img"
                  src={null}
                  svg="ico-next-S"
                />
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt=""
                  src="http://localhost/icons/picto-placeholder-visueloffre.png"
                />,
                "className": "teaser-thumb",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "",
                  "src": "http://localhost/icons/picto-placeholder-visueloffre.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="teaser-title"
                  >
                    Fake offer name
                  </div>,
                  <div
                    className="teaser-sub-title"
                  >
                    Fake offer type label
                  </div>,
                  <div
                    className="teaser-date"
                  >
                    permanent
                  </div>,
                  <div
                    className="mf-infos"
                  >
                    <span
                      className="mf-status mf-booked"
                    >
                      Réservé
                    </span>
                    <span
                      className="teaser-distance"
                    >
                      10 km
                    </span>
                  </div>,
                ],
                "className": "teaser-wrapper mf-wrapper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Fake offer name",
                    "className": "teaser-title",
                  },
                  "ref": null,
                  "rendered": "Fake offer name",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Fake offer type label",
                    "className": "teaser-sub-title",
                  },
                  "ref": null,
                  "rendered": "Fake offer type label",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "permanent",
                    "className": "teaser-date",
                  },
                  "ref": null,
                  "rendered": "permanent",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      Array [
                        <span
                          className="mf-status mf-booked"
                        >
                          Réservé
                        </span>,
                      ],
                      <span
                        className="teaser-distance"
                      >
                        10 km
                      </span>,
                    ],
                    "className": "mf-infos",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "booked",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Réservé",
                        "className": "mf-status mf-booked",
                      },
                      "ref": null,
                      "rendered": "Réservé",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "10 km",
                        "className": "teaser-distance",
                      },
                      "ref": null,
                      "rendered": "10 km",
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Icon
                  alt={null}
                  className="teaser-arrow-img"
                  src={null}
                  svg="ico-next-S"
                />,
                "className": "teaser-arrow",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "alt": null,
                  "className": "teaser-arrow-img",
                  "src": null,
                  "svg": "ico-next-S",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": Symbol(react.fragment),
        },
        "type": [Function],
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
