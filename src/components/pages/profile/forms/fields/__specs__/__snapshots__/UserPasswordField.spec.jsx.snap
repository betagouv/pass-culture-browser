// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | profile | forms | fields | UserPasswordField should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserPasswordField
    formErrors={false}
    isLoading={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <PasswordField
          autoComplete={false}
          disabled={false}
          id={null}
          label="Mot de passe actuel"
          name="oldPassword"
          placeholder=""
          required={[Function]}
          sublabel={null}
        />,
        <PasswordField
          autoComplete={false}
          disabled={false}
          id={null}
          label="Nouveau mot de passe"
          name="newPassword"
          placeholder=""
          required={true}
          sublabel={null}
        />,
        <PasswordField
          autoComplete={false}
          disabled={false}
          id={null}
          label="Confirmation nouveau mot de passe"
          name="newPasswordConfirm"
          placeholder=""
          required={[Function]}
          sublabel={null}
        />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoComplete": false,
          "disabled": false,
          "id": null,
          "label": "Mot de passe actuel",
          "name": "oldPassword",
          "placeholder": "",
          "required": [Function],
          "sublabel": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoComplete": false,
          "disabled": false,
          "id": null,
          "label": "Nouveau mot de passe",
          "name": "newPassword",
          "placeholder": "",
          "required": true,
          "sublabel": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoComplete": false,
          "disabled": false,
          "id": null,
          "label": "Confirmation nouveau mot de passe",
          "name": "newPasswordConfirm",
          "placeholder": "",
          "required": [Function],
          "sublabel": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <PasswordField
            autoComplete={false}
            disabled={false}
            id={null}
            label="Mot de passe actuel"
            name="oldPassword"
            placeholder=""
            required={[Function]}
            sublabel={null}
          />,
          <PasswordField
            autoComplete={false}
            disabled={false}
            id={null}
            label="Nouveau mot de passe"
            name="newPassword"
            placeholder=""
            required={true}
            sublabel={null}
          />,
          <PasswordField
            autoComplete={false}
            disabled={false}
            id={null}
            label="Confirmation nouveau mot de passe"
            name="newPasswordConfirm"
            placeholder=""
            required={[Function]}
            sublabel={null}
          />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoComplete": false,
            "disabled": false,
            "id": null,
            "label": "Mot de passe actuel",
            "name": "oldPassword",
            "placeholder": "",
            "required": [Function],
            "sublabel": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoComplete": false,
            "disabled": false,
            "id": null,
            "label": "Nouveau mot de passe",
            "name": "newPassword",
            "placeholder": "",
            "required": true,
            "sublabel": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoComplete": false,
            "disabled": false,
            "id": null,
            "label": "Confirmation nouveau mot de passe",
            "name": "newPasswordConfirm",
            "placeholder": "",
            "required": [Function],
            "sublabel": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
