// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | TermsPage snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TermsPage
    appversion="0.6.1"
    errors={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <PageHeader
          canSubmit={true}
          className=""
          isloading={false}
          theme="red"
          title="Mentions légales"
          useBack={true}
          useClose={true}
          useSubmit={false}
        />,
        <main
          className="pc-main is-clipped"
          role="main"
        >
          <div
            className="pc-scroll-container"
          >
            <div
              className="padded content"
              style={
                Object {
                  "backgroundImage": "url('http://localhost/mosaic-k.png')",
                }
              }
            >
              <ReactMarkdown
                astPlugins={Array []}
                escapeHtml={true}
                plugins={Array []}
                rawSourcePos={false}
                renderers={Object {}}
                skipHtml={false}
                source=""
                sourcePos={false}
                transformLinkUri={[Function]}
              />
              <div
                className="mt16"
              >
                <p
                  className="text-right"
                >
                  Pass Culture v.0.6.1
                </p>
              </div>
            </div>
          </div>
        </main>,
        <Connect(NavigationFooter)
          className="dotted-top-red"
          theme="white"
        />,
      ],
      "className": "page is-relative flex-rows",
      "id": "terms-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "canSubmit": true,
          "className": "",
          "isloading": false,
          "theme": "red",
          "title": "Mentions légales",
          "useBack": true,
          "useClose": true,
          "useSubmit": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pc-scroll-container"
          >
            <div
              className="padded content"
              style={
                Object {
                  "backgroundImage": "url('http://localhost/mosaic-k.png')",
                }
              }
            >
              <ReactMarkdown
                astPlugins={Array []}
                escapeHtml={true}
                plugins={Array []}
                rawSourcePos={false}
                renderers={Object {}}
                skipHtml={false}
                source=""
                sourcePos={false}
                transformLinkUri={[Function]}
              />
              <div
                className="mt16"
              >
                <p
                  className="text-right"
                >
                  Pass Culture v.0.6.1
                </p>
              </div>
            </div>
          </div>,
          "className": "pc-main is-clipped",
          "role": "main",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="padded content"
              style={
                Object {
                  "backgroundImage": "url('http://localhost/mosaic-k.png')",
                }
              }
            >
              <ReactMarkdown
                astPlugins={Array []}
                escapeHtml={true}
                plugins={Array []}
                rawSourcePos={false}
                renderers={Object {}}
                skipHtml={false}
                source=""
                sourcePos={false}
                transformLinkUri={[Function]}
              />
              <div
                className="mt16"
              >
                <p
                  className="text-right"
                >
                  Pass Culture v.0.6.1
                </p>
              </div>
            </div>,
            "className": "pc-scroll-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <ReactMarkdown
                  astPlugins={Array []}
                  escapeHtml={true}
                  plugins={Array []}
                  rawSourcePos={false}
                  renderers={Object {}}
                  skipHtml={false}
                  source=""
                  sourcePos={false}
                  transformLinkUri={[Function]}
                />,
                <div
                  className="mt16"
                >
                  <p
                    className="text-right"
                  >
                    Pass Culture v.0.6.1
                  </p>
                </div>,
              ],
              "className": "padded content",
              "style": Object {
                "backgroundImage": "url('http://localhost/mosaic-k.png')",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "astPlugins": Array [],
                  "escapeHtml": true,
                  "plugins": Array [],
                  "rawSourcePos": false,
                  "renderers": Object {},
                  "skipHtml": false,
                  "source": "",
                  "sourcePos": false,
                  "transformLinkUri": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="text-right"
                  >
                    Pass Culture v.0.6.1
                  </p>,
                  "className": "mt16",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pass Culture v.0.6.1",
                    "className": "text-right",
                  },
                  "ref": null,
                  "rendered": "Pass Culture v.0.6.1",
                  "type": "p",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "main",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "dotted-top-red",
          "theme": "white",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <PageHeader
            canSubmit={true}
            className=""
            isloading={false}
            theme="red"
            title="Mentions légales"
            useBack={true}
            useClose={true}
            useSubmit={false}
          />,
          <main
            className="pc-main is-clipped"
            role="main"
          >
            <div
              className="pc-scroll-container"
            >
              <div
                className="padded content"
                style={
                  Object {
                    "backgroundImage": "url('http://localhost/mosaic-k.png')",
                  }
                }
              >
                <ReactMarkdown
                  astPlugins={Array []}
                  escapeHtml={true}
                  plugins={Array []}
                  rawSourcePos={false}
                  renderers={Object {}}
                  skipHtml={false}
                  source=""
                  sourcePos={false}
                  transformLinkUri={[Function]}
                />
                <div
                  className="mt16"
                >
                  <p
                    className="text-right"
                  >
                    Pass Culture v.0.6.1
                  </p>
                </div>
              </div>
            </div>
          </main>,
          <Connect(NavigationFooter)
            className="dotted-top-red"
            theme="white"
          />,
        ],
        "className": "page is-relative flex-rows",
        "id": "terms-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "canSubmit": true,
            "className": "",
            "isloading": false,
            "theme": "red",
            "title": "Mentions légales",
            "useBack": true,
            "useClose": true,
            "useSubmit": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pc-scroll-container"
            >
              <div
                className="padded content"
                style={
                  Object {
                    "backgroundImage": "url('http://localhost/mosaic-k.png')",
                  }
                }
              >
                <ReactMarkdown
                  astPlugins={Array []}
                  escapeHtml={true}
                  plugins={Array []}
                  rawSourcePos={false}
                  renderers={Object {}}
                  skipHtml={false}
                  source=""
                  sourcePos={false}
                  transformLinkUri={[Function]}
                />
                <div
                  className="mt16"
                >
                  <p
                    className="text-right"
                  >
                    Pass Culture v.0.6.1
                  </p>
                </div>
              </div>
            </div>,
            "className": "pc-main is-clipped",
            "role": "main",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="padded content"
                style={
                  Object {
                    "backgroundImage": "url('http://localhost/mosaic-k.png')",
                  }
                }
              >
                <ReactMarkdown
                  astPlugins={Array []}
                  escapeHtml={true}
                  plugins={Array []}
                  rawSourcePos={false}
                  renderers={Object {}}
                  skipHtml={false}
                  source=""
                  sourcePos={false}
                  transformLinkUri={[Function]}
                />
                <div
                  className="mt16"
                >
                  <p
                    className="text-right"
                  >
                    Pass Culture v.0.6.1
                  </p>
                </div>
              </div>,
              "className": "pc-scroll-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ReactMarkdown
                    astPlugins={Array []}
                    escapeHtml={true}
                    plugins={Array []}
                    rawSourcePos={false}
                    renderers={Object {}}
                    skipHtml={false}
                    source=""
                    sourcePos={false}
                    transformLinkUri={[Function]}
                  />,
                  <div
                    className="mt16"
                  >
                    <p
                      className="text-right"
                    >
                      Pass Culture v.0.6.1
                    </p>
                  </div>,
                ],
                "className": "padded content",
                "style": Object {
                  "backgroundImage": "url('http://localhost/mosaic-k.png')",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "astPlugins": Array [],
                    "escapeHtml": true,
                    "plugins": Array [],
                    "rawSourcePos": false,
                    "renderers": Object {},
                    "skipHtml": false,
                    "source": "",
                    "sourcePos": false,
                    "transformLinkUri": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <p
                      className="text-right"
                    >
                      Pass Culture v.0.6.1
                    </p>,
                    "className": "mt16",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Pass Culture v.0.6.1",
                      "className": "text-right",
                    },
                    "ref": null,
                    "rendered": "Pass Culture v.0.6.1",
                    "type": "p",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "main",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "dotted-top-red",
            "theme": "white",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
