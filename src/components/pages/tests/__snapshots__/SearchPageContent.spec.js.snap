// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | SearchPageContent snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchPageContent
    dispatch={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
          Array [
            Object {
              "patch": Object {
                "recommendations": Array [],
              },
              "type": "ASSIGN_DATA",
            },
          ],
          Array [
            Object {
              "config": Object {},
              "method": "GET",
              "path": "types",
              "type": "REQUEST_DATA_GET_TYPES",
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={
      Object {
        "hash": "",
        "key": "lxn6vp",
        "pathname": "/recherche",
        "search": "?orderBy=offer.id+desc",
        "state": undefined,
      }
    }
    match={
      Object {
        "params": Object {
          "categorie": undefined,
          "view": "resultats",
        },
      }
    }
    query={
      Object {
        "change": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
            Array [
              Object {
                "page": null,
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "parse": [Function],
      }
    }
    recommendations={Array []}
    search={Object {}}
    typeSublabels={Array []}
    typeSublabelsAndDescription={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "backButton": Object {
        "onClick": [Function],
      },
      "children": Array [
        <form
          onSubmit={[Function]}
        >
          <div
            className="flex-columns items-start"
          >
            <div
              className="field has-addons flex-columns flex-1"
              id="search-page-keywords-field"
            >
              <p
                className="control has-icons-right flex-1"
              >
                <input
                  className="input search-input"
                  id="keywords"
                  onChange={[Function]}
                  placeholder="Un mot-clÃ©"
                  type="text"
                />
              </p>
              <div
                className="control flex-0"
              >
                <button
                  className="button is-rounded is-medium"
                  disabled={true}
                  id="keywords-search-button"
                  type="submit"
                >
                  Chercher
                </button>
              </div>
            </div>
            <div
              className="flex-0 text-center flex-rows flex-center pb12 "
              id="search-filter-menu-toggle-button"
            >
              <button
                className="no-border no-background no-outline "
                onClick={[Function]}
                type="button"
              >
                <Icon
                  svg="ico-filter-active"
                />
              </button>
            </div>
          </div>
        </form>,
        <withRouter(_withQueryRouter)
          isVisible={false}
        />,
        <Switch
          location={
            Object {
              "hash": "",
              "key": "lxn6vp",
              "pathname": "/recherche",
              "search": "?orderBy=offer.id+desc",
              "state": undefined,
            }
          }
        >
          <Route
            exact={true}
            path="/recherche"
            render={[Function]}
          />
          <Route
            path="/recherche/resultats/:categorie"
            render={[Function]}
          />
          <Route
            path="/recherche/resultats"
            render={[Function]}
          />
        </Switch>,
      ],
      "closeSearchButton": true,
      "footer": [Function],
      "handleDataRequest": [Function],
      "header": [Function],
      "id": "search-page",
      "name": "search",
      "pageTitle": "Recherche : rÃ©sultats",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="flex-columns items-start"
          >
            <div
              className="field has-addons flex-columns flex-1"
              id="search-page-keywords-field"
            >
              <p
                className="control has-icons-right flex-1"
              >
                <input
                  className="input search-input"
                  id="keywords"
                  onChange={[Function]}
                  placeholder="Un mot-clÃ©"
                  type="text"
                />
              </p>
              <div
                className="control flex-0"
              >
                <button
                  className="button is-rounded is-medium"
                  disabled={true}
                  id="keywords-search-button"
                  type="submit"
                >
                  Chercher
                </button>
              </div>
            </div>
            <div
              className="flex-0 text-center flex-rows flex-center pb12 "
              id="search-filter-menu-toggle-button"
            >
              <button
                className="no-border no-background no-outline "
                onClick={[Function]}
                type="button"
              >
                <Icon
                  svg="ico-filter-active"
                />
              </button>
            </div>
          </div>,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="field has-addons flex-columns flex-1"
                id="search-page-keywords-field"
              >
                <p
                  className="control has-icons-right flex-1"
                >
                  <input
                    className="input search-input"
                    id="keywords"
                    onChange={[Function]}
                    placeholder="Un mot-clÃ©"
                    type="text"
                  />
                </p>
                <div
                  className="control flex-0"
                >
                  <button
                    className="button is-rounded is-medium"
                    disabled={true}
                    id="keywords-search-button"
                    type="submit"
                  >
                    Chercher
                  </button>
                </div>
              </div>,
              <div
                className="flex-0 text-center flex-rows flex-center pb12 "
                id="search-filter-menu-toggle-button"
              >
                <button
                  className="no-border no-background no-outline "
                  onClick={[Function]}
                  type="button"
                >
                  <Icon
                    svg="ico-filter-active"
                  />
                </button>
              </div>,
            ],
            "className": "flex-columns items-start",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="control has-icons-right flex-1"
                  >
                    <input
                      className="input search-input"
                      id="keywords"
                      onChange={[Function]}
                      placeholder="Un mot-clÃ©"
                      type="text"
                    />
                  </p>,
                  <div
                    className="control flex-0"
                  >
                    <button
                      className="button is-rounded is-medium"
                      disabled={true}
                      id="keywords-search-button"
                      type="submit"
                    >
                      Chercher
                    </button>
                  </div>,
                ],
                "className": "field has-addons flex-columns flex-1",
                "id": "search-page-keywords-field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="input search-input"
                        id="keywords"
                        onChange={[Function]}
                        placeholder="Un mot-clÃ©"
                        type="text"
                      />,
                      undefined,
                    ],
                    "className": "control has-icons-right flex-1",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "input search-input",
                        "defaultValue": undefined,
                        "id": "keywords",
                        "onChange": [Function],
                        "placeholder": "Un mot-clÃ©",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    undefined,
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded is-medium"
                      disabled={true}
                      id="keywords-search-button"
                      type="submit"
                    >
                      Chercher
                    </button>,
                    "className": "control flex-0",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Chercher",
                      "className": "button is-rounded is-medium",
                      "disabled": true,
                      "id": "keywords-search-button",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Chercher",
                    "type": "button",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="no-border no-background no-outline "
                  onClick={[Function]}
                  type="button"
                >
                  <Icon
                    svg="ico-filter-active"
                  />
                </button>,
                "className": "flex-0 text-center flex-rows flex-center pb12 ",
                "id": "search-filter-menu-toggle-button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Icon
                    svg="ico-filter-active"
                  />,
                  "className": "no-border no-background no-outline ",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "svg": "ico-filter-active",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isVisible": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              exact={true}
              path="/recherche"
              render={[Function]}
            />,
            <Route
              path="/recherche/resultats/:categorie"
              render={[Function]}
            />,
            <Route
              path="/recherche/resultats"
              render={[Function]}
            />,
          ],
          "location": Object {
            "hash": "",
            "key": "lxn6vp",
            "pathname": "/recherche",
            "search": "?orderBy=offer.id+desc",
            "state": undefined,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/recherche",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/recherche/resultats/:categorie",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/recherche/resultats",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "backButton": Object {
          "onClick": [Function],
        },
        "children": Array [
          <form
            onSubmit={[Function]}
          >
            <div
              className="flex-columns items-start"
            >
              <div
                className="field has-addons flex-columns flex-1"
                id="search-page-keywords-field"
              >
                <p
                  className="control has-icons-right flex-1"
                >
                  <input
                    className="input search-input"
                    id="keywords"
                    onChange={[Function]}
                    placeholder="Un mot-clÃ©"
                    type="text"
                  />
                </p>
                <div
                  className="control flex-0"
                >
                  <button
                    className="button is-rounded is-medium"
                    disabled={true}
                    id="keywords-search-button"
                    type="submit"
                  >
                    Chercher
                  </button>
                </div>
              </div>
              <div
                className="flex-0 text-center flex-rows flex-center pb12 "
                id="search-filter-menu-toggle-button"
              >
                <button
                  className="no-border no-background no-outline "
                  onClick={[Function]}
                  type="button"
                >
                  <Icon
                    svg="ico-filter-active"
                  />
                </button>
              </div>
            </div>
          </form>,
          <withRouter(_withQueryRouter)
            isVisible={false}
          />,
          <Switch
            location={
              Object {
                "hash": "",
                "key": "lxn6vp",
                "pathname": "/recherche",
                "search": "?orderBy=offer.id+desc",
                "state": undefined,
              }
            }
          >
            <Route
              exact={true}
              path="/recherche"
              render={[Function]}
            />
            <Route
              path="/recherche/resultats/:categorie"
              render={[Function]}
            />
            <Route
              path="/recherche/resultats"
              render={[Function]}
            />
          </Switch>,
        ],
        "closeSearchButton": true,
        "footer": [Function],
        "handleDataRequest": [Function],
        "header": [Function],
        "id": "search-page",
        "name": "search",
        "pageTitle": "Recherche : rÃ©sultats",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="flex-columns items-start"
            >
              <div
                className="field has-addons flex-columns flex-1"
                id="search-page-keywords-field"
              >
                <p
                  className="control has-icons-right flex-1"
                >
                  <input
                    className="input search-input"
                    id="keywords"
                    onChange={[Function]}
                    placeholder="Un mot-clÃ©"
                    type="text"
                  />
                </p>
                <div
                  className="control flex-0"
                >
                  <button
                    className="button is-rounded is-medium"
                    disabled={true}
                    id="keywords-search-button"
                    type="submit"
                  >
                    Chercher
                  </button>
                </div>
              </div>
              <div
                className="flex-0 text-center flex-rows flex-center pb12 "
                id="search-filter-menu-toggle-button"
              >
                <button
                  className="no-border no-background no-outline "
                  onClick={[Function]}
                  type="button"
                >
                  <Icon
                    svg="ico-filter-active"
                  />
                </button>
              </div>
            </div>,
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="field has-addons flex-columns flex-1"
                  id="search-page-keywords-field"
                >
                  <p
                    className="control has-icons-right flex-1"
                  >
                    <input
                      className="input search-input"
                      id="keywords"
                      onChange={[Function]}
                      placeholder="Un mot-clÃ©"
                      type="text"
                    />
                  </p>
                  <div
                    className="control flex-0"
                  >
                    <button
                      className="button is-rounded is-medium"
                      disabled={true}
                      id="keywords-search-button"
                      type="submit"
                    >
                      Chercher
                    </button>
                  </div>
                </div>,
                <div
                  className="flex-0 text-center flex-rows flex-center pb12 "
                  id="search-filter-menu-toggle-button"
                >
                  <button
                    className="no-border no-background no-outline "
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      svg="ico-filter-active"
                    />
                  </button>
                </div>,
              ],
              "className": "flex-columns items-start",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="control has-icons-right flex-1"
                    >
                      <input
                        className="input search-input"
                        id="keywords"
                        onChange={[Function]}
                        placeholder="Un mot-clÃ©"
                        type="text"
                      />
                    </p>,
                    <div
                      className="control flex-0"
                    >
                      <button
                        className="button is-rounded is-medium"
                        disabled={true}
                        id="keywords-search-button"
                        type="submit"
                      >
                        Chercher
                      </button>
                    </div>,
                  ],
                  "className": "field has-addons flex-columns flex-1",
                  "id": "search-page-keywords-field",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          className="input search-input"
                          id="keywords"
                          onChange={[Function]}
                          placeholder="Un mot-clÃ©"
                          type="text"
                        />,
                        undefined,
                      ],
                      "className": "control has-icons-right flex-1",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "input search-input",
                          "defaultValue": undefined,
                          "id": "keywords",
                          "onChange": [Function],
                          "placeholder": "Un mot-clÃ©",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      undefined,
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded is-medium"
                        disabled={true}
                        id="keywords-search-button"
                        type="submit"
                      >
                        Chercher
                      </button>,
                      "className": "control flex-0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Chercher",
                        "className": "button is-rounded is-medium",
                        "disabled": true,
                        "id": "keywords-search-button",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Chercher",
                      "type": "button",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="no-border no-background no-outline "
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      svg="ico-filter-active"
                    />
                  </button>,
                  "className": "flex-0 text-center flex-rows flex-center pb12 ",
                  "id": "search-filter-menu-toggle-button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Icon
                      svg="ico-filter-active"
                    />,
                    "className": "no-border no-background no-outline ",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "svg": "ico-filter-active",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "button",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isVisible": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                exact={true}
                path="/recherche"
                render={[Function]}
              />,
              <Route
                path="/recherche/resultats/:categorie"
                render={[Function]}
              />,
              <Route
                path="/recherche/resultats"
                render={[Function]}
              />,
            ],
            "location": Object {
              "hash": "",
              "key": "lxn6vp",
              "pathname": "/recherche",
              "search": "?orderBy=offer.id+desc",
              "state": undefined,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/recherche",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/recherche/resultats/:categorie",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/recherche/resultats",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
