// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | search | BookingFooter snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BookingFooter
    canSubmitForm={true}
    isBooked={true}
    isSubmitting={true}
    onCancel={[MockFunction]}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        false,
        false,
        <button
          className="text-center my5"
          onClick={[MockFunction]}
          type="button"
        >
          <b>
            OK
          </b>
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <b>
            OK
          </b>,
          "className": "text-center my5",
          "onClick": [MockFunction],
          "type": "button",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "OK",
          },
          "ref": null,
          "rendered": "OK",
          "type": "b",
        },
        "type": "button",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          false,
          false,
          <button
            className="text-center my5"
            onClick={[MockFunction]}
            type="button"
          >
            <b>
              OK
            </b>
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <b>
              OK
            </b>,
            "className": "text-center my5",
            "onClick": [MockFunction],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "OK",
            },
            "ref": null,
            "rendered": "OK",
            "type": "b",
          },
          "type": "button",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
