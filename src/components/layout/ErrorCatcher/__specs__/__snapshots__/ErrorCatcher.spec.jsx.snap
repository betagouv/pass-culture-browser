// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | layout | ErrorCatcher render catcher view if an error is throwned 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorCatcher
    history={
      Object {
        "replace": [MockFunction],
      }
    }
  >
    <Children />
  </ErrorCatcher>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex-1 flex-rows flex-center"
      >
        <h2
          className="fs20"
        >
          Une erreur est survenue.
        </h2>
        <p
          className="mt12"
        >
          <button
            className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
            onClick={[Function]}
            type="button"
          >
            <span>
              Retour aux offres
            </span>
          </button>
        </p>
      </div>,
      "id": "error-catcher",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="fs20"
          >
            Une erreur est survenue.
          </h2>,
          <p
            className="mt12"
          >
            <button
              className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
              onClick={[Function]}
              type="button"
            >
              <span>
                Retour aux offres
              </span>
            </button>
          </p>,
        ],
        "className": "flex-1 flex-rows flex-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Une erreur est survenue.",
            "className": "fs20",
          },
          "ref": null,
          "rendered": "Une erreur est survenue.",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
              onClick={[Function]}
              type="button"
            >
              <span>
                Retour aux offres
              </span>
            </button>,
            "className": "mt12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                Retour aux offres
              </span>,
              "className": "no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Retour aux offres",
              },
              "ref": null,
              "rendered": "Retour aux offres",
              "type": "span",
            },
            "type": "button",
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex-1 flex-rows flex-center"
        >
          <h2
            className="fs20"
          >
            Une erreur est survenue.
          </h2>
          <p
            className="mt12"
          >
            <button
              className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
              onClick={[Function]}
              type="button"
            >
              <span>
                Retour aux offres
              </span>
            </button>
          </p>
        </div>,
        "id": "error-catcher",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="fs20"
            >
              Une erreur est survenue.
            </h2>,
            <p
              className="mt12"
            >
              <button
                className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
                onClick={[Function]}
                type="button"
              >
                <span>
                  Retour aux offres
                </span>
              </button>
            </p>,
          ],
          "className": "flex-1 flex-rows flex-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Une erreur est survenue.",
              "className": "fs20",
            },
            "ref": null,
            "rendered": "Une erreur est survenue.",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
                onClick={[Function]}
                type="button"
              >
                <span>
                  Retour aux offres
                </span>
              </button>,
              "className": "mt12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  Retour aux offres
                </span>,
                "className": "no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Retour aux offres",
                },
                "ref": null,
                "rendered": "Retour aux offres",
                "type": "span",
              },
              "type": "button",
            },
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`src | components | layout | ErrorCatcher should match the snapshot and render the children as is 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Children />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "any child component",
    },
    "ref": null,
    "rendered": "any child component",
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "any child component",
      },
      "ref": null,
      "rendered": "any child component",
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {},
    Symbol(enzyme.__providerValues__): Map {},
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`src | components | layout | ErrorCatcher should match the snapshot with error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorCatcher
    history={
      Object {
        "replace": [MockFunction],
      }
    }
  >
    <Children />
  </ErrorCatcher>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex-1 flex-rows flex-center"
      >
        <h2
          className="fs20"
        >
          Une erreur est survenue.
        </h2>
        <p
          className="mt12"
        >
          <button
            className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
            onClick={[Function]}
            type="button"
          >
            <span>
              Retour aux offres
            </span>
          </button>
        </p>
      </div>,
      "id": "error-catcher",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="fs20"
          >
            Une erreur est survenue.
          </h2>,
          <p
            className="mt12"
          >
            <button
              className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
              onClick={[Function]}
              type="button"
            >
              <span>
                Retour aux offres
              </span>
            </button>
          </p>,
        ],
        "className": "flex-1 flex-rows flex-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Une erreur est survenue.",
            "className": "fs20",
          },
          "ref": null,
          "rendered": "Une erreur est survenue.",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
              onClick={[Function]}
              type="button"
            >
              <span>
                Retour aux offres
              </span>
            </button>,
            "className": "mt12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                Retour aux offres
              </span>,
              "className": "no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Retour aux offres",
              },
              "ref": null,
              "rendered": "Retour aux offres",
              "type": "span",
            },
            "type": "button",
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex-1 flex-rows flex-center"
        >
          <h2
            className="fs20"
          >
            Une erreur est survenue.
          </h2>
          <p
            className="mt12"
          >
            <button
              className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
              onClick={[Function]}
              type="button"
            >
              <span>
                Retour aux offres
              </span>
            </button>
          </p>
        </div>,
        "id": "error-catcher",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="fs20"
            >
              Une erreur est survenue.
            </h2>,
            <p
              className="mt12"
            >
              <button
                className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
                onClick={[Function]}
                type="button"
              >
                <span>
                  Retour aux offres
                </span>
              </button>
            </p>,
          ],
          "className": "flex-1 flex-rows flex-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Une erreur est survenue.",
              "className": "fs20",
            },
            "ref": null,
            "rendered": "Une erreur est survenue.",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16"
                onClick={[Function]}
                type="button"
              >
                <span>
                  Retour aux offres
                </span>
              </button>,
              "className": "mt12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  Retour aux offres
                </span>,
                "className": "no-background border-all rd4 py12 px18 is-inline-block is-white-text text-center fs16",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Retour aux offres",
                },
                "ref": null,
                "rendered": "Retour aux offres",
                "type": "span",
              },
              "type": "button",
            },
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
