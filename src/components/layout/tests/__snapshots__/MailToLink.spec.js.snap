// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | share | MailToLink snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MailToLink
    className=""
    email="email@fake.com"
    header={Object {}}
    headers={Object {}}
    obfuscate={false}
  >
    <header>
      <h1>
        Fake children
      </h1>
    </header>
  </MailToLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <header>
        <h1>
          Fake children
        </h1>
      </header>,
      "className": "",
      "header": Object {},
      "href": "mailto:email@fake.com?",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h1>
          Fake children
        </h1>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Fake children",
        },
        "ref": null,
        "rendered": "Fake children",
        "type": "h1",
      },
      "type": "header",
    },
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <header>
          <h1>
            Fake children
          </h1>
        </header>,
        "className": "",
        "header": Object {},
        "href": "mailto:email@fake.com?",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            Fake children
          </h1>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Fake children",
          },
          "ref": null,
          "rendered": "Fake children",
          "type": "h1",
        },
        "type": "header",
      },
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
