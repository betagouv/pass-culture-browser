// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | PageHeader snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PageHeader
    canSubmit={true}
    className=""
    isloading={false}
    theme="red"
    title="fake title"
    useBack={true}
    useClose={false}
    useSubmit={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <h1>
        <span>
          fake title
        </span>
        <withRouter(RawPageBackButton)
          disabled={false}
          theme="red"
        />
      </h1>,
      "className": "pc-theme-red pc-header is-relative ",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            fake title
          </span>,
          <withRouter(RawPageBackButton)
            disabled={false}
            theme="red"
          />,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "fake title",
          },
          "ref": null,
          "rendered": "fake title",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "disabled": false,
            "theme": "red",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": "h1",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h1>
          <span>
            fake title
          </span>
          <withRouter(RawPageBackButton)
            disabled={false}
            theme="red"
          />
        </h1>,
        "className": "pc-theme-red pc-header is-relative ",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              fake title
            </span>,
            <withRouter(RawPageBackButton)
              disabled={false}
              theme="red"
            />,
            false,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "fake title",
            },
            "ref": null,
            "rendered": "fake title",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "disabled": false,
              "theme": "red",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
        ],
        "type": "h1",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
