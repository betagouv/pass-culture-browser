// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | layout | Main snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RawMain
    backButton={false}
    closeSearchButton={false}
    dispatch={[MockFunction]}
    footer={null}
    handleDataRequest={null}
    header={null}
    history={Object {}}
    location={Object {}}
    name="foo"
    noPadding={false}
    pageTitle={null}
    redBg={false}
    user={null}
  >
    <div>
      foo
    </div>
  </RawMain>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <main
          className="foo-page page"
          role="main"
        >
          <div
            className="page-content is-relative"
          >
            <div>
              foo
            </div>
          </div>
        </main>,
        <withRouter(Connect(Modal)) />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            null,
            false,
            false,
            <div
              className="page-content is-relative"
            >
              <div>
                foo
              </div>
            </div>,
            null,
          ],
          "className": "foo-page page",
          "role": "main",
        },
        "ref": null,
        "rendered": Array [
          null,
          false,
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                foo
              </div>,
              "className": "page-content is-relative",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "foo",
              },
              "ref": null,
              "rendered": "foo",
              "type": "div",
            },
            "type": "div",
          },
          null,
        ],
        "type": "main",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <main
            className="foo-page page"
            role="main"
          >
            <div
              className="page-content is-relative"
            >
              <div>
                foo
              </div>
            </div>
          </main>,
          <withRouter(Connect(Modal)) />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              null,
              false,
              false,
              <div
                className="page-content is-relative"
              >
                <div>
                  foo
                </div>
              </div>,
              null,
            ],
            "className": "foo-page page",
            "role": "main",
          },
          "ref": null,
          "rendered": Array [
            null,
            false,
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div>
                  foo
                </div>,
                "className": "page-content is-relative",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "foo",
                },
                "ref": null,
                "rendered": "foo",
                "type": "div",
              },
              "type": "div",
            },
            null,
          ],
          "type": "main",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
