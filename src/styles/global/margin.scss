// used: 3, 8, 12, 16, 20, 22, 40
$spaces: (0, 3, 5, 7, 8, 12, 16, 20, 22, 28, 30, 32, 36, 40, 48, 60);

@each $space in $spaces {
  $sides: (all, topbottom, leftright, top, left, right, bottom);

  @each $side in $sides {
    @if $side == 'all' {
      .m#{$space} {
        margin: #{$space}px;
        margin: calculateRem(#{$space}px);
      }

      .p#{$space} {
        padding: #{$space}px;
        padding: calculateRem(#{$space}px);
      }
    }

    @else if $side == 'topbottom' {
      .my#{$space} {
        margin-top: #{$space}px;
        margin-top: calculateRem(#{$space}px);
        margin-bottom: #{$space}px;
        margin-bottom: calculateRem(#{$space}px);
      }

      .py#{$space} {
        padding-top: #{$space}px;
        padding-top: calculateRem(#{$space}px);
        padding-bottom: #{$space}px;
        padding-bottom: calculateRem(#{$space}px);
      }
    }

    @else if $side == 'leftright' {
      .mx#{$space} {
        margin-left: #{$space}px;
        margin-left: calculateRem(#{$space}px);
        margin-right: #{$space}px;
        margin-right: calculateRem(#{$space}px);
      }

      .px#{$space} {
        padding-left: #{$space}px;
        padding-left: calculateRem(#{$space}px);
        padding-right: #{$space}px;
        padding-right: calculateRem(#{$space}px);
      }
    }

    @else {
      .m#{str-slice($side, 0, 1)}#{$space} {
        margin-#{$side}: #{$space}px;
        margin-#{$side}: calculateRem(#{$space}px);
      }

      .p#{str-slice($side, 0, 1)}#{$space} {
        padding-#{$side}: #{$space}px;
        padding-#{$side}: calculateRem(#{$space}px);
      }
    }
  }
}
